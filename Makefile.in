.PHONY : clean

SHELL=/bin/sh
OS := $(shell uname -s)

INCLUDE=-Isrc/include -Isrc/lib/third_party/include

CFLAGS= -fPIC -g $(INCLUDE)
LDFLAGS= -shared
LIBS=-lpthread

SOURCES = $(shell echo src/lib/*.c src/lib/protocols/*.c src/lib/third_party/src/*.c)
READER=example/ndpiReader

RANLIB=ranlib
CC=gcc
NDPI_LIBDIR=lib

OBJECTS=$(SOURCES:.c=.o)

ifeq ($(OS),Linux)
SHEXT=so
SHLIBS = -Wl,--version-script=libndpi.exp,-soname,libndpi.so.1
endif

ifeq ($(OS),Darwin)
SHEXT=dylib
SHLIBS = -install_name lib/libndpi.dylib
endif

NDPI_SHARED=$(NDPI_LIBDIR)/libndpi-@PACKAGE_VERSION@.$(SHEXT)
NDPI_STATIC=$(NDPI_LIBDIR)/libndpi.a

JSON_HOME=example/third-party/json-c
JSON_INC=-I$(JSON_HOME)
JSON_LIB=$(JSON_HOME)/.libs/libjson-c.a


all: $(NDPI_SHARED) $(READER)

clean:
	rm -rf $(OBJECTS) $(NDPI_SHARED) autom4te.cache *~ config.log config.status $(NDPI_LIBDIR)/* bin/*

cleanall: clean
	rm -f config.h configure Makefile

$(NDPI_SHARED) : $(OBJECTS)
	$(CC) $(CFLAGS) $(OBJECTS) -o $@ $(LDFLAGS) $(SHLIBS)
	cd $(NDPI_LIBDIR); ln -sf libndpi-@PACKAGE_VERSION@.$(SHEXT) libndpi.$(SHEXT).1; ln -sf  libndpi.$(SHEXT).1  libndpi.$(SHEXT)

$(NDPI_STATIC): $(OBJECTS)
	ar rc $(NDPI_STATIC) $(OBJECTS)
	$(RANLIB) $@

$(READER): $(NDPI_STATIC) $(JSON_LIB)
	$(CC) $(CFLAGS) $(JSON_INC) @PCAP_INC@ example/ndpiReader.c -o $@ $(NDPI_STATIC) @PCAP_LIB@ $(JSON_LIB) $(LIBS)

$(JSON_LIB):
	cd $(JSON_HOME); ./autogen.sh; ./configure; make

#$(READER): $(NDPI_SHARED) src/example/ndpiReader.c
#	$(CC) $(CFLAGS) src/example/ndpiReader.c -o $@ $(NDPI_SHARED) $(LIBS)

install: all
	mkdir -p @INSTALL_PREFIX@/include @INSTALL_PREFIX@/lib @INSTALL_PREFIX@/bin
	cp ./src/include/*.h @INSTALL_PREFIX@/include
	cp -r ./lib/* @INSTALL_PREFIX@/lib	
	cp ./example/ndpiReader @INSTALL_PREFIX@/bin

uninstall: 
	rm -r @INSTALL_PREFIX@/include/ndpi*
	rm -r @INSTALL_PREFIX@/lib/libndpi*
	rm  @INSTALL_PREFIX@/bin/ndpiReader
	